clear;
close all;
clc;
load('rec_1m.mat'); % load the ECG signal from the file
x1=val(1,:);
fs = 500;              % Sampling rate
N = length(x1);       % Signal length
t = (0:N-1)/fs;        % time index
figure(1);
subplot(8,1,1);
plot(t,x1);
xlabel('second');
ylabel('Volts');
title('Input ECG Signal');
% Cancellation of DC drift and Normalization
x1= x1-mean(x1);    % cancel DC components
x1= x1/max(abs(x1)); % normalize to one
subplot(8,1,2);
plot(t,x1);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after cancellation DC drift and normalization');
% LPF (1-z^-6)^2/(1-z^-1)^2
b=[1 0 0 0 0 0 -2 0 0 0 0 0 1];
a=[1 -2 1]; 
h_LP=filter(b,a,[1 zeros(1,12)]); % transfer function of LPF
x2 = conv(x1,h_LP);
%x2 = x2 (6+[1: N]); %cancel delay
x2 = x2/max(abs(x2)); % normalize , for convenience .
subplot(8,1,3);
plot((0:length(x2)-1)/fs,x2);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after LPF')
xlim([0 max(t)]);
% HPF = Allpass-(Lowpass) = z^-16-[(1-z^-32)/(1-z^-1)]
b = [-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 -32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1];
a = [1 -1];
h_HP=filter(b,a,[1 zeros(1,32)]); % impulse response of HPF
x3 = conv(x2,h_HP);
%x3 = x3 (16+[1: N]); %cancel delay
x3 = x3/max(abs(x3)); % normalize , for convenience .
subplot(8,1,4);
plot((0:length(x3)-1)/fs,x3);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after HPF');
xlim([0 max(t)]);
%Derivative Filtering
% Make impulse response
h = [-1 -2 0 2 1]/8;
% Apply filter
x4 = conv (x3 ,h);
x4 = x4(2+(1:N));
x4 = x4/max(abs(x4));  % normalize , for convenience .
subplot(8,1,5);
plot((0:length(x4)-1)/fs,x4);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after Derivative');
%Squaring
x5 = x4.^2; %element by  element squaring like c=power(x4,2)
x5 = x5/max(abs(x5));  % normalize , for convenience
subplot(8,1,6);
plot((0:length(x5)-1)/fs,x5);
xlabel('second');
ylabel('Volts');
title(' ECG Signal Squaring');
%Averaging
% Make impulse response
h = ones (1 ,31)/31;
Delay = 15; % Delay in samples
% Apply filter
x6 = conv (x5 ,h);
x6 = x6 (15+(1:N));
x6 = x6/max(abs(x6)); % normalize , for convenience
subplot(8,1,7);
plot((0:length(x6)-1)/fs,x6);
xlabel('second');
ylabel('Volts');
title(' ECG Signal after Averaging');
